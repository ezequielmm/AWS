<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:p="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI.Properties"
                    xmlns:l="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI.Resource.TreeView">

   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Minus.xaml"/>
      <ResourceDictionary Source="Plus.xaml"/>
      <ResourceDictionary Source="Plus_12px_icon.xaml"/>
      <ResourceDictionary Source="Minus_12px_icon.xaml"/>
      <ResourceDictionary Source="Error_icon.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.Common.GUI;component/Styles/Colors.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.Common.GUI;component/Styles/ContextMenuStyle.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.Common.GUI;component/Styles/RadMenuItemStyle.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.ReportModule.GUI;component/ContextMenu/PageContextMenuEntries.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.ReportModule.GUI;component/ContextMenu/ContextMenuItemBasicStyle.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.ReportModule.GUI;component/Resource/ContextMenuIconResource.xaml"/>
   </ResourceDictionary.MergedDictionaries>

   <Style TargetType="{x:Type telerik:RadMenuItem}" BasedOn="{StaticResource CustomRadMenuItemStyle}" x:Key="ContextMenuItemStyle">
      <Setter Property="Foreground" Value="#2B2B2B"/>
      <Setter Property="Height" Value="27.0"/>
      <Setter Property="Width" Value="199.0"/>
      <Setter Property="MaxWidth" Value="219.0"/>
      <Setter Property="Margin" Value="0,0,0,0"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="Padding" Value="0,4,4,4"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="BorderBrush" Value="#aaa9a9"/>
      <Setter Property="IconColumnWidth" Value="28"/>
      <Setter Property="MaxHeight" Value="27.0"/>
      <Setter Property="IsEnabled" Value="True"/>
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background">
               <Setter.Value>
                  <SolidColorBrush Color="#c3e0ff"  Opacity="1"/>
               </Setter.Value>
            </Setter>
         </Trigger>
         <DataTrigger Binding="{Binding CanDeleteItem}" Value="False">
            <Setter Property="IsEnabled" Value="False"/>
         </DataTrigger>
      </Style.Triggers>
   </Style>

   <l:RadContextMenuExt x:Key="TreeViewContextMenu" x:Shared="false" 
                           Style="{StaticResource ContextMenuStyleWithOutVerticalSeparator}"
                           ItemContainerStyle="{StaticResource ContextMenuItemStyle}" AllowDrop="False"
   >
      <telerik:RadMenuItem Header="{x:Static p:Resources.Delete}" Command="{Binding Path=DataContext.DeleteItemCommand, 
         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik:RadContextMenu}}}">
         <telerik:RadMenuItem.Icon>
            <Image Source="{StaticResource DeleteDrawingImage}" Style="{StaticResource MenuItemImageStyle}"/>
         </telerik:RadMenuItem.Icon>
      </telerik:RadMenuItem>
   </l:RadContextMenuExt>

   <Style x:Key="TreeViewExpanderStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="IsEnabled" Value="True" />
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border Background="Transparent" SnapsToDevicePixels="False">
                  <Image x:Name="ExpandImg" Source="{StaticResource Plus_12px_iconDrawingImage}" Stretch="None" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter Property="Source" TargetName="ExpandImg" Value="{StaticResource Minus_12px_iconDrawingImage}"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="TreeViewItemStyle" TargetType="{x:Type telerik:RadTreeViewItem}">
      <Setter Property="FocusVisualStyle">
         <Setter.Value>
            <Style>
               <Setter Property="Control.Template">
                  <Setter.Value>
                     <ControlTemplate>
                        <Rectangle Margin="0" Stroke="Transparent" StrokeThickness="0"/>
                     </ControlTemplate>
                  </Setter.Value>
               </Setter>
            </Style>
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Padding" Value="1,4,5,4"/>
      <Setter Property="MinHeight" Value="25"/>
      <Setter Property="IsDropAllowed" Value="True"/>
      <Setter Property="IsEnabled" Value="True"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
      <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
      <Setter Property="Command" Value="{Binding Path=SelectItemCommand}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type telerik:RadTreeViewItem}">
               <Grid x:Name="RootElement" telerik:RadContextMenu.ContextMenu="{StaticResource TreeViewContextMenu}">
                  <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition/>
                  </Grid.RowDefinitions>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="EditStates">
                        <VisualState x:Name="Display"/>
                        <VisualState x:Name="Edit">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EditHeaderElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                              <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="LoadingOnDemandStates">
                        <VisualState x:Name="LoadingOnDemand">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LoadingVisual">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Expander">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimation Duration="0:0:1" From="0" RepeatBehavior="Forever" To="359" Storyboard.TargetProperty="Angle" Storyboard.TargetName="LoadingVisualAngleTransform"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="LoadingOnDemandReverse"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ExpandStates">
                        <VisualState x:Name="Expanded">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Collapsed"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="HeaderRow" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                     </Grid.ColumnDefinitions>
                     <Border x:Name="MouseOverVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="6" Grid.Column="0" CornerRadius="0"/>
                     <Border x:Name="SecondarySelected" BorderBrush="White" BorderThickness="2" Background="{TemplateBinding Background}" Grid.ColumnSpan="6" Grid.Column="0" CornerRadius="0"/>
                     <StackPanel x:Name="IndentContainer" Grid.Column="0" Orientation="Horizontal">
                        <Rectangle x:Name="IndentFirstVerticalLine" Stroke="#FFCCCCCC" Visibility="Collapsed" VerticalAlignment="Top" Width="1"/>
                     </StackPanel>
                     <Grid x:Name="ListRootContainer" Grid.Column="1" HorizontalAlignment="Center" MinWidth="21">
                        <Rectangle x:Name="HorizontalLine" HorizontalAlignment="Right" Height="1" Stroke="#FFCCCCCC" VerticalAlignment="Center"/>
                        <Rectangle x:Name="VerticalLine" HorizontalAlignment="Center" Stroke="#FFCCCCCC" VerticalAlignment="Top" Width="1"/>
                        <ToggleButton x:Name="Expander" Background="{TemplateBinding Background}" IsTabStop="False"/>
                        <Grid x:Name="LoadingVisual" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                           <Grid.RenderTransform>
                              <TransformGroup>
                                 <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                              </TransformGroup>
                           </Grid.RenderTransform>
                           <Path Data="M1,0A1,1,90,1,1,0,-1" Height="10" StrokeStartLineCap="Round" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10"/>
                           <Path Data="M0,-1.1L0.1,-1 0,-0.9" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="4" Margin="5,-1.5,0,0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Top" Width="4"/>
                        </Grid>
                     </Grid>
                     <Image x:Name="Image" Grid.Column="3" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" Margin="1,0,0,0" VerticalAlignment="Center"/>
                     <Grid x:Name="HeaderContentPanel" Grid.Column="4" Grid.ColumnSpan="2">
                        <ContentControl x:Name="Header" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentPresenter x:Name="EditHeaderElement" ContentTemplate="{TemplateBinding HeaderEditTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                     </Grid>
                  </Grid>
                  <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Visibility="Collapsed" Margin="0,0,0,0"/>
                  
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" SourceName="HeaderRow" Value="True">
                     <Setter Property="Background" TargetName="MouseOverVisual" Value="{StaticResource BlueSecondaryBrush}" />
                     <Setter Property="BorderThickness" Value="1" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Background" TargetName="MouseOverVisual" Value="{StaticResource BluePrimaryBrush}"/>
                     <Setter Property="BorderThickness" Value="1" />
                  </Trigger>
                  <DataTrigger Binding="{Binding Path=(l:RadContextMenuExt.IsRadContextMenuOpen), Mode=TwoWay, ElementName=RootElement}" Value="True">
                     <Setter Property="BorderBrush" TargetName="SecondarySelected" Value="{StaticResource BluePrimaryBrush}"/>
                  </DataTrigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="ItemsPanel">
         <Setter.Value>
            <ItemsPanelTemplate>
               <telerik:TreeViewPanel IsItemsHost="True" IsVisualCacheEnabled="False" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
            </ItemsPanelTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>