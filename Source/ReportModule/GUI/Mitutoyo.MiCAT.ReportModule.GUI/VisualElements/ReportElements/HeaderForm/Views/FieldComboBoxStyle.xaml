<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:g="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI"
   xmlns:common="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI.Common"
   xmlns:h="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI.VisualElements.ReportElements.HeaderForm.Views"
   xmlns:rel="clr-namespace:Mitutoyo.MiCAT.ReportModule.GUI.VisualElements"
   xmlns:sys="clr-namespace:System;assembly=mscorlib">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.Common.GUI;component/Styles/Colors.xaml"/>
      <ResourceDictionary Source="/Mitutoyo.MiCAT.Common.GUI;component/Styles/Fonts.xaml"/>

      <ResourceDictionary>
         <SolidColorBrush x:Key="FieldComboBoxNormalBorderBrush" Color="Transparent" />
         <SolidColorBrush x:Key="FieldComboBoxNormalBackgroundBrush" Color="Transparent" />
         <SolidColorBrush x:Key="FieldComboBoxDisabledForegroundBrush" Color="#FF6D6D6D" />
         <SolidColorBrush x:Key="FieldComboBoxDisabledBackgroundBrush" Color="Transparent" />
         <SolidColorBrush x:Key="FieldComboBoxDisabledBorderBrush" Color="Transparent" />
         <common:ReciprocalScaleValueConverter x:Key="ReciprocalScaleValueConverter"/>
         <DrawingGroup x:Key="Delete iconDrawingGroup">
            <DrawingGroup.Children>
               <DrawingGroup>
                  <DrawingGroup.Children>
                     <DrawingGroup>
                        <DrawingGroup.Children>
                           <!-- Layer 1/<Group>/<Path> -->
                           <GeometryDrawing Brush="#ff1b1b1b" Geometry="F1 M 10.586,0.000 L 6.000,4.586 L 1.414,0.000 L 0.000,1.414 L 4.586,6.000 L 0.000,10.586 L 1.414,12.000 L 6.000,7.414 L 10.586,12.000 L 12.000,10.586 L 7.414,6.000 L 12.000,1.414 L 10.586,0.000" />
                        </DrawingGroup.Children>
                     </DrawingGroup>
                  </DrawingGroup.Children>
               </DrawingGroup>
            </DrawingGroup.Children>
         </DrawingGroup>
         <DrawingImage x:Key="Delete iconDrawingImage" Drawing="{StaticResource Delete iconDrawingGroup}" />
         <DrawingGroup x:Key="Edit iconDrawingGroup">
            <DrawingGroup.Children>
               <DrawingGroup>
                  <DrawingGroup.Children>
                     <DrawingGroup>
                        <DrawingGroup.Children>
                           <!-- Layer 1/<Group>/<Path> -->
                           <GeometryDrawing Brush="#ff060606" Geometry="F1 M 4.602,14.267 C 3.777,14.488 3.090,14.684 2.398,14.852 C 2.178,14.905 1.117,13.804 1.151,13.582 C 1.173,13.438 1.222,13.299 1.262,13.158 C 1.412,12.624 1.564,12.091 1.717,11.547 C 2.276,11.913 2.279,11.915 2.778,11.415 C 5.355,8.837 7.928,6.256 10.510,3.684 C 10.709,3.485 10.712,3.379 10.585,3.178 L 10.384,2.977 C 10.014,2.597 9.854,2.398 9.616,2.398 C 9.424,2.398 9.050,2.873 8.778,3.145 C 6.480,5.438 4.186,7.736 1.885,10.026 C 1.661,10.250 1.508,10.495 1.423,10.801 C 0.978,12.416 0.521,14.028 0.073,15.643 C 0.044,15.750 -0.062,15.886 0.052,15.970 C 0.110,16.012 0.251,15.952 0.351,15.925 C 1.965,15.476 3.579,15.023 5.194,14.578 C 5.484,14.498 5.726,14.360 5.941,14.145 C 8.433,11.650 10.927,9.159 13.431,6.676 C 13.650,6.459 13.672,6.342 13.441,6.118 C 12.829,5.527 12.240,4.911 11.655,4.293 C 11.486,4.116 11.383,4.087 11.193,4.278 C 8.494,6.995 5.788,9.707 3.076,12.413 C 2.908,12.581 2.925,12.675 3.085,12.823 C 3.570,13.273 4.045,13.735 4.602,14.267 Z" />
                           <!-- Layer 1/<Group>/<Path> -->
                           <GeometryDrawing Brush="#ff020202" Geometry="F1 M 16.000,3.449 C 15.983,2.953 15.812,2.528 15.473,2.181 C 14.933,1.630 14.392,1.080 13.835,0.546 C 13.069,-0.190 12.108,-0.179 11.346,0.560 C 11.022,0.874 10.710,1.203 10.383,1.515 C 10.242,1.648 10.211,1.736 10.368,1.892 C 11.615,3.126 12.856,4.369 14.094,5.613 C 14.223,5.743 14.310,5.809 14.470,5.636 C 14.813,5.265 15.186,4.923 15.534,4.557 C 15.829,4.247 15.976,3.867 16.000,3.449 Z" />
                        </DrawingGroup.Children>
                     </DrawingGroup>
                  </DrawingGroup.Children>
               </DrawingGroup>
            </DrawingGroup.Children>
         </DrawingGroup>
         <DrawingImage x:Key="EditIconDrawingImage" Drawing="{StaticResource Edit iconDrawingGroup}" />

         <ControlTemplate TargetType="{x:Type Button}" x:Key="FieldComboBoxButtonTemplate">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="20" />
               </Grid.ColumnDefinitions>
               <Border Grid.Column="2" Margin="1, 1, 1, 1" BorderBrush="#444" Name="CrossButtonBorder"
                 CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                 Background="{StaticResource FieldComboBoxNormalBackgroundBrush}" />
               <Image Width="12" Height="12" Name="Cross" Grid.Column="1"  Source="{StaticResource EditIconDrawingImage}"/>
            </Grid>
            <ControlTemplate.Triggers>
               <Trigger Property="ToggleButton.IsChecked" Value="True">
                  <Setter Property="Panel.Background" TargetName="CrossButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Panel.Background" TargetName="CrossButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="IsHitTestVisible" Value="False">
                  <Setter Property="Visibility" TargetName="Cross" Value="Hidden" />
               </Trigger>
            </ControlTemplate.Triggers>
         </ControlTemplate>

         <ControlTemplate TargetType="{x:Type Button}" x:Key="FieldComboBoxClearButtonTemplate">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="20" />
               </Grid.ColumnDefinitions>
               <Border Grid.Column="2" Margin="1, 1, 1, 1" BorderBrush="#444" Name="CrossButtonBorder"
                 CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                 Background="{StaticResource FieldComboBoxNormalBackgroundBrush}" />

               <Image Width="12" Height="12" Name="Delete" Grid.Column="1"  Source="{StaticResource Delete iconDrawingImage}"/>
            </Grid>
            <ControlTemplate.Triggers>
               <Trigger Property="ToggleButton.IsChecked" Value="True">
                  <Setter Property="Panel.Background" TargetName="CrossButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Panel.Background" TargetName="CrossButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="IsHitTestVisible" Value="False">
                  <Setter Property="Visibility" TargetName="Delete" Value="Hidden" />
               </Trigger>
            </ControlTemplate.Triggers>
         </ControlTemplate>

         <ControlTemplate TargetType="ToggleButton" x:Key="FieldComboBoxToggleButtonTemplate">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <!--<ColumnDefinition Width="20" />-->
                  <ColumnDefinition Width="20" />
               </Grid.ColumnDefinitions>
               <Border Grid.ColumnSpan="1" Name="Border"
              BorderBrush="{StaticResource FieldComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource FieldComboBoxNormalBackgroundBrush}" />
               <Border Grid.Column="2" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource FieldComboBoxNormalBackgroundBrush}" />

               <Path Name="Arrow" Grid.Column="2" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
               <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="ToggleButton.IsChecked" Value="True">
                  <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
               </Trigger>
               <Trigger Property="UIElement.IsHitTestVisible" Value="False">
                  <Setter Property="Visibility" Value="Hidden"/>
               </Trigger>
               <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                     <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type h:HeaderFormField}}, Path=DataContext.HeaderForm.RenderMode}"  Value="{x:Static rel:RenderMode.EditMode}"/>
                  </MultiDataTrigger.Conditions>
                  <Setter Property="Visibility" Value="Visible"/>
               </MultiDataTrigger>
            </ControlTemplate.Triggers>
         </ControlTemplate>
         <Style TargetType="{x:Type h:FieldComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
            <Setter Property="FontWeight" Value="{StaticResource FontWeightNormal}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
               <Setter.Value>
                  <ControlTemplate TargetType="ComboBox">
                     <Grid>
                        <ToggleButton 
                           Name="ToggleButton" 
                           ClickMode="Press" Focusable="False"
                           IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                           Template="{StaticResource FieldComboBoxToggleButtonTemplate}"
                        />

                        <Button Width="20" Name="EditButton"
                           HorizontalAlignment="Right"
                           Margin="20 0"
                           ClickMode="Press" Focusable="False"
                           Template="{StaticResource FieldComboBoxButtonTemplate}"
                           Command="{Binding EditLabelCommand}"
                        >
                           <Button.Style>
                              <Style TargetType="Button">
                                 <Setter Property="Visibility" Value="Visible"/>
                                 <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanEdit}" Value="False">
                                       <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                       <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Button.Style>
                        </Button>
                        <Button Width="20" Name="DeleteButton"
                          HorizontalAlignment="Right"
                          Margin="20 0"
                          ClickMode="Press" Focusable="False"
                          Template="{StaticResource FieldComboBoxClearButtonTemplate}"
                          Command="{Binding ClearLabelCommand}"
                        >
                           <Button.Style>
                              <Style TargetType="Button">
                                 <Setter Property="Visibility" Value="Hidden"/>
                                 <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditable}" Value="True">
                                       <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Button.Style>
                        </Button>

                        <ContentPresenter 
                           Name="ContentSite"
                           IsHitTestVisible="False"
                           HorizontalAlignment="Left" VerticalAlignment="Center"                              
                           Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                           ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                           ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        >
                           <ContentPresenter.Resources>
                              <Style TargetType="{x:Type TextBlock}">
                                 <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanEdit}" Value="True">
                                       <DataTrigger.Setters>
                                          <Setter Property="FontStyle" Value="{StaticResource FontStyleItalic}" />
                                       </DataTrigger.Setters>
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </ContentPresenter.Resources>
                           <ContentPresenter.Style>
                              <Style TargetType="ContentPresenter">
                                 <Setter Property="Margin" Value="3, 3, 20, 3" />
                                 <Style.Triggers>
                                    <DataTrigger 
                                       Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                         AncestorType={x:Type h:FieldComboBox}},
                                                         Path=DataContext.CanEdit}" 
                                       Value="True"
                                    >
                                       <DataTrigger.Setters>
                                          <Setter Property="Margin" Value="3, 3, 40, 3" />
                                       </DataTrigger.Setters>
                                    </DataTrigger>

                                 </Style.Triggers>
                              </Style>
                           </ContentPresenter.Style>
                        </ContentPresenter>

                        <TextBox Name="PART_EditableTextBox"
                           IsReadOnly="{TemplateBinding IsReadOnly}"
                           Visibility="Hidden" Background="Transparent"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           Focusable="True"
                        >
                           <TextBox.Template>
                              <ControlTemplate TargetType="TextBox">
                                 <Border Name="PART_ContentHost" Focusable="False" />
                              </ControlTemplate>
                           </TextBox.Template>
                           <TextBox.Style>
                              <Style TargetType="TextBox">
                                 <Setter Property="Margin" Value="3, 3, 20, 3" />
                                 <Style.Triggers>
                                    <DataTrigger 
                                       Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                         AncestorType={x:Type h:FieldComboBox}},
                                                         Path=DataContext.CanEdit}" 
                                       Value="True"
                                    >
                                       <DataTrigger.Setters>
                                          <Setter Property="Margin" Value="3, 3, 40, 3" />
                                       </DataTrigger.Setters>
                                    </DataTrigger>

                                 </Style.Triggers>
                              </Style>
                           </TextBox.Style>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                           Focusable="False" AllowsTransparency="True"
                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                            PopupAnimation="Slide">
                           <Popup.LayoutTransform>
                              <TransformGroup>
                                 <!-- REFACTOR: Avoid looking up for a specific ancestor type -->
                                 <ScaleTransform ScaleX="{Binding Path=DataContext.ZoomFactor.Scale, RelativeSource={RelativeSource Mode=FindAncestor,
                                 AncestorType={x:Type g:ReportViewWorkspace}}, Converter={StaticResource ReciprocalScaleValueConverter}}" 
                                                 ScaleY="{Binding Path=DataContext.ZoomFactor.Scale, RelativeSource={RelativeSource Mode=FindAncestor,
                                 AncestorType={x:Type g:ReportViewWorkspace}}, Converter={StaticResource ReciprocalScaleValueConverter}}"/>
                              </TransformGroup>
                           </Popup.LayoutTransform>
                           <Grid Name="DropDown" SnapsToDevicePixels="True"
                                 MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                 MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                           >
                              <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                 CornerRadius="0" BorderThickness="1,1,1,1" 
                                 BorderBrush="{StaticResource BlackBrush}"/>
                              <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                 <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                              </ScrollViewer>
                           </Grid>
                        </Popup>
                     </Grid>
                     <ControlTemplate.Triggers>
                        <MultiTrigger>
                           <MultiTrigger.Conditions>
                              <Condition Property="UIElement.IsHitTestVisible" Value="False"/>
                              <Condition Property="ComboBox.SelectedValue" Value="{x:Static sys:Guid.Empty}"/>
                           </MultiTrigger.Conditions>
                           <Setter Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                           <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type h:HeaderFormField}}, Path=DataContext.HeaderForm.RenderMode}"  Value="{x:Static rel:RenderMode.EditMode}"/>
                           </MultiDataTrigger.Conditions>
                           <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                           <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                           <Setter Property="TextElement.Foreground" Value="{StaticResource FieldComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                           <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                           <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                           <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                           <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                     </ControlTemplate.Triggers>
                     <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ComboBoxItem}">
                           <Setter Property="BorderThickness" Value="0" />
                           <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
                           <Setter Property="FontWeight" Value="{StaticResource FontWeightNormal}"/>
                           <Style.Triggers>
                              <DataTrigger Binding="{Binding Id}" Value="{x:Static sys:Guid.Empty}">
                                 <DataTrigger.Setters>
                                    <Setter Property="FontStyle" Value="{StaticResource FontStyleItalic}" />
                                 </DataTrigger.Setters>
                              </DataTrigger>
                           </Style.Triggers>
                        </Style>
                     </ControlTemplate.Resources>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
      </ResourceDictionary>
   </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>